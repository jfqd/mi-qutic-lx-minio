# Upstreams
upstream backend {
  server 127.0.0.1:9001;
}
upstream s3 {
  server 127.0.0.1:9000;
}
# Redirect Options
server {
listen 80;
  server_name localhost;
  # enforce https
  return 301 https://$server_name$request_uri;
}
# HTTPS Server
server {
  listen               443 ssl;
  server_name          localhost;
  access_log           /var/log/nginx/minio.access.log main;
  error_log            /var/log/nginx/minio.error.log;
  ssl_certificate      /etc/nginx/ssl/minio.crt;
  ssl_certificate_key  /etc/nginx/ssl/minio.key;
  ssl_protocols        TLSv1.2 TLSv1.3;
  ignore_invalid_headers off;
  client_max_body_size 0;
  proxy_buffering off;
  location / {
    proxy_pass http://s3;
    proxy_http_version 1.1;
    proxy_connect_timeout 300;
    proxy_set_header Connection "";
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forward-Proto http;
    chunked_transfer_encoding off;
  }
}
server {
  listen               8080 ssl;
  server_name          localhost;
  access_log           /var/log/nginx/minio.access.log main;
  error_log            /var/log/nginx/minio.error.log;
  ssl_certificate      /etc/nginx/ssl/minio.crt;
  ssl_certificate_key  /etc/nginx/ssl/minio.key;
  ssl_protocols        TLSv1.2 TLSv1.3;
  ignore_invalid_headers off;
  client_max_body_size 0;
  proxy_buffering off;
  location / {
    proxy_pass http://backend;
    proxy_http_version 1.1;
    proxy_connect_timeout 300;
    proxy_set_header Connection "";
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forward-Proto http;
    chunked_transfer_encoding off;
  }

}
server {
  listen 127.0.0.1;
  server_name localhost;
  location /nginx_status {
    stub_status on;
    access_log   off;
    allow 127.0.0.1;
    deny all;
  }
}